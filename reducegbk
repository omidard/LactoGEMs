#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Dec 15 06:19:59 2021

@author: omidard
"""

#reduce genome

import pandas as pd
from Bio import SeqIO
from Bio import AlignIO
from Bio import Phylo
import os

genome_file=r'/Users/omidard/Desktop/reactome/pan.faa'
result_file=r'/Users/omidard/Desktop/reactome/ref.fasta'
gpr = pd.read_excel (r'/Users/omidard/Desktop/reactome/ugpr.xls') #xls list of gprs and related rxn_ids
gprdf = str(list(gpr.GPR))
loc1=gprdf.replace("', '","\n")
loc2=loc1.replace("['", "")
loc3=loc2.replace("']", "")
loc4=loc3.replace(" ", "\n")
for line in loc4:
    loc5 = list(loc4.splitlines())
loc6 = list(dict.fromkeys(loc5))
#%%
with open(result_file, "w") as g:
    fasta_sequences = SeqIO.parse(open(genome_file),'fasta')
    for seq in fasta_sequences:
        if seq.id in loc5:
            SeqIO.write([seq], g, "fasta")

#%%


in_handle = open(r'/Users/omidard/Desktop/multispecies/Supplementary/genomes/merged.gbk', "r")
gb = SeqIO.read(in_handle, "genbank")
in_handle.close()

for feature in record.features:
    with open('ref.gbk','w') as rf:
        if feature.type == 'CDS':
            locus_tag = feature.qualifiers['locus_tag'][0]
            if locus_tag in str(loc5):
                target_feature = feature
                DNA_seq = target_feature.extract(record)
                DNA_seq.id = record.id
                DNA_seq.name = feature.qualifiers['gene']
                DNA_seq.description = feature.qualifiers['product']
                SeqIO.write(DNA_seq, rf, 'genbank')
           
            
from Bio import SeqIO
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
from Bio.Alphabet import IUPAC
from Bio.SeqFeature import SeqFeature, FeatureLocation

# Create a sequence
sequence_string = "ggggaaaattttaaaaccccaaaa"
sequence_object = Seq(sequence_string, IUPAC.unambiguous_dna)
 
# Create a record
record = SeqRecord(sequence_object,
                   id='123456789', # random accession number
                   name='Example',
                   description='An example GenBank file generated by BioPython')
 
# Add annotation
feature = SeqFeature(FeatureLocation(start=3, end=12), type='misc_feature')
record.features.append(feature)
 
# Save as GenBank file
output_file = open('example.gb', 'w')
SeqIO.write(record, output_file, 'genbank')






